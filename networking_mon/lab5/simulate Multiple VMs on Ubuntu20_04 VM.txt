Before you start, I assume you are now on Ubuntu20.04 VM. If you are on the Ubuntu 20.04 VM of the (aws) cloud, you need to first set a password for 
seed account: $sudo passwd seed. 

Then, do the following to simulate multiple VMs on the LAN within one  SEEDUbuntu20_04
1. copy docker-compose.yml to the current directory  // different Lab will use different docker file. This is for TCP attack
2. docker-compose build  //this will build the container image: simulated machines
3. docker-compose up    //this will start the containers: the simulated machines are running
3. dockps // this will list all of simulated machines

/* This is sample output
$dockps

1b322346734f attacker    
0af4ea7a3e2e user1-10.9.0.6
9652715c8e0a user2-10.9.0.7
b1004832e275 victim-10.9.0.5   // this is (ID,  host_name_IP) pair
                                  Here victim is the telnet server and user1 and user2 can be telnet clients. 
*/

4. docksh 96    //This is to get the bash command line for machine of ID 96***. Then you will see the following
   root@9652715c8e0a:/#
   This on root account. You can switch to seed account: $su -l seed
/* Now you can say now you are working on the simulated machine 9652715c8e0a; run $ifconfig and you will ip address like 10.9.0.7
You can run other simulated machines using different xterminals. So now you have several machines to work on*/
/*In these simulated VMs, attacker is a real machine and can run any command just as in a real Ubuntu OS. The other three are not real. 
 But they are prepared so that telnet is allowed so that we can conduct our TCP attack on telnet. */

5. /note: ./volumes is directory shared with all users. Since user1 and user2 VMs can not edit files (as they are too simple VMs), you prepare
the program on attacker VM under ./volumes and then execute your program on user1 or user2 VMs. 

6. Emphasize again: victim (telnet server), user1/user2 (telnet client) are very simple VM. Attacker VM is full functional VM. 
   You sniff the traffic on the main machine, choosing the interface of form "br-****" (the interface connecting to the simulated LAB)
